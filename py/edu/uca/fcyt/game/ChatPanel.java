/*
 * ChatPanel.java
 *
 * Created on 12 de abril de 2003, 09:54 AM
 */

package py.edu.uca.fcyt.game;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JFrame;

import py.edu.uca.fcyt.toluca.game.TrucoPlayer;
import rath.jmsn.ui.ChatArea;
import javax.swing.JButton;

/**
 * 
 * @author PABLO JAVIER
 */
public class ChatPanel extends javax.swing.JPanel {
    private ChatPanelContainer cpc;

    private TrucoPlayer player;

    private DefaultListModel dlm;

    public ChatPanel() {
        initComponents();
    }

    public ChatPanel(ChatPanelContainer cpc) {
        this();
        setCpc(cpc);
    }

    /** Creates new form ChatPanel */
    public ChatPanel(ChatPanelContainer cpc, TrucoPlayer player) {
        if (player == null) {
            new Exception("Se fue a la puta: player null")
                    .printStackTrace(System.out);
            //            System.out.println("El player es null :((");
        } else {
            //            System.out.println("TrucoPlayer BZ!: " + player.getName());
        }
        setPlayer(player);
        setCpc(cpc);
        initComponents();
    }

    public void showChatMessage(TrucoPlayer player, String htmlMessage) {
        getChatArea().append(player.getName() + ": " + htmlMessage + "\n");
        //        getChatArea().setCaretPosition(getChatArea().getText().length());
    }

    public void showChatMessage(TrucoPlayer player, String htmlMessage,
            String[] bounds) {
        if (bounds == null)
            bounds = new String[] { "**", "**" };
        getChatArea().append(
                bounds[0] + player.getName() + bounds[1] + ": " + htmlMessage
                        + "\n");
        getChatArea().setCaretPosition(getChatArea().getText() != null ? getChatArea().getText().length() : 0);
    }
public void showSystemMessage(String htmlMessage,     String[] bounds) 
{
	  if (bounds == null)
        bounds = new String[] { "**", "**" };
    getChatArea().append(
            bounds[0] + "System" + bounds[1] + " " + htmlMessage
                    + "\n");
    //getChatArea().setCaretPosition(getChatArea().getText() != null ? getChatArea().getText().length() : 0);
}
    private void sendChatMessage() {

        // System.out.println(getClass().getName()+" getplayer "+getPlayer());
        cpc.sendChatMessage(getPlayer(), jtInput.getText());
        jtInput.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        jpInput = new javax.swing.JPanel();
        jtInput = new javax.swing.JTextField();
        jbSend = new javax.swing.JButton();

        jpChat = new javax.swing.JPanel();
        jspChat = new javax.swing.JScrollPane();
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setPreferredSize(new java.awt.Dimension(200, 100));
        jpInput.setLayout(new javax.swing.BoxLayout(jpInput,
                javax.swing.BoxLayout.X_AXIS));

        jtInput.setPreferredSize(new java.awt.Dimension(300, 20));
        jtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtInputKeyPressed(evt);
            }
        });

        jpInput.add(jtInput);

        jbSend.setText("Enviar");
        jbSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });

        jpInput.add(getJBemoticones(), null);
        jpInput.add(jbSend);

        add(jpInput);

        jpChat.setLayout(new javax.swing.BoxLayout(jpChat,
                javax.swing.BoxLayout.X_AXIS));

        jspChat.setPreferredSize(new java.awt.Dimension(350, 320));
        jspChat.setViewportView(getChatArea());
        jpChat.add(jspChat);

        add(jpChat);

    }//GEN-END:initComponents

    private void jtInputKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtInputKeyPressed
    {//GEN-HEADEREND:event_jtInputKeyPressed
        // Add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
            sendChatMessage();
    }//GEN-LAST:event_jtInputKeyPressed

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        // Add your handling code here:
        sendChatMessage();
    }//GEN-LAST:event_SendActionPerformed

    /**
     * Getter for property cpc.
     * 
     * @return Value of property cpc.
     *  
     */
    public ChatPanelContainer getCpc() {
        return cpc;
    }

    /**
     * Setter for property cpc.
     * 
     * @param cpc
     *            New value of property cpc.
     *  
     */
    public void setCpc(ChatPanelContainer cpc) {
        this.cpc = cpc;
    }

    /**
     * Getter for property player.
     * 
     * @return Value of property player.
     *  
     */
    public TrucoPlayer getPlayer() {
        return player;
    }

    /**
     * Setter for property player.
     * 
     * @param player
     *            New value of property player.
     *  
     */
    public void setPlayer(TrucoPlayer player) {
        //System.out.println("ChatPanel.setPlayer: Se setea el player
        // "+player);
        this.player = player;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbSend;

    private javax.swing.JTextField jtInput;

    private javax.swing.JPanel jpInput;

    private javax.swing.JPanel jpChat;

    private javax.swing.JScrollPane jspChat;

    private ChatArea chatArea = null;

    private EmoticonsWindow emoticonsMenu = null;

    private JButton jBemoticones = null;

    /**
     * This method initializes chatArea
     * 
     * @return javax.swing.ChatArea
     */
    private ChatArea getChatArea() {
        if (chatArea == null) {
            chatArea = new ChatArea() {
                public void acceptFiles(List files) {
                }

                public void inviteFriend(String loginName) {
                }
            };
        }
        return chatArea;
    }

    /**
     * This method initializes emoticonsMenu
     * 
     * @return py.edu.uca.fcyt.game.EmoticonsWindow
     */
    private EmoticonsWindow getEmoticonsMenu() {
        if (emoticonsMenu == null) {
            emoticonsMenu = new EmoticonsWindow();
            emoticonsMenu.setChatPanel(this);

        }
        return emoticonsMenu;
    }

    /**
     * This method initializes jBemoticones
     * 
     * @return javax.swing.JButton
     */
    public JButton getJBemoticones() {
        if (jBemoticones == null) {
            jBemoticones = new JButton();
            jBemoticones.setMaximumSize(new Dimension(1024, jbSend
                    .getPreferredSize().height));
            jBemoticones.setIcon(getEmoticonsMenu().getLastIconSelected());
            jBemoticones.setToolTipText("Click derecho inserta el ultimo emoticon seleccionado");
            jBemoticones.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jbEmoticonesActionPerformed(e);
            }});
            jBemoticones.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    if (e.getButton() == MouseEvent.BUTTON3) {
                        StringBuffer texto = new StringBuffer(getJtInput().getText());
                        texto.append(" ");
                        texto.append(getEmoticonsMenu().getName());
                        getJtInput().setText(texto.toString());                        
                    }
                }
            });
        }
        return jBemoticones;
    }

    /**
     * @param e
     */
    protected void jbEmoticonesActionPerformed(ActionEvent e) {
        getEmoticonsMenu().setLocationRelativeTo(jBemoticones);
        getEmoticonsMenu().setVisible(true);
    }

    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        TrucoPlayer pepito = new TrucoPlayer("Don Pepito", 8);
        TrucoPlayer jose = new TrucoPlayer("Don Jos�", 8);
        ChatPanel cp = new ChatPanel(null, pepito);
        JFrame jf = new JFrame("Chat paaaaaanel!");
        jf.getContentPane().add(cp);
        jf.pack();
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jf.setVisible(true);
        //        cp.showChatMessage(jose, "Hola don Pepito");
        //        cp.showChatMessage(pepito, "Hola don Jos�");
    }

    public javax.swing.JTextField getJtInput() {
        return jtInput;
    }

    public void setJtInput(javax.swing.JTextField jtInput) {
        this.jtInput = jtInput;
    }
}